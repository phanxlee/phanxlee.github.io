<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Phanx&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.phanx.com/"/>
  <updated>2017-06-20T03:34:03.620Z</updated>
  <id>http://www.phanx.com/</id>
  
  <author>
    <name>Phanx Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用 lsyncd 来替代 inotify-rsync 进行文件同步</title>
    <link href="http://www.phanx.com/2017/06/18/use-lsyncd-to-replace-inotify-rsync/"/>
    <id>http://www.phanx.com/2017/06/18/use-lsyncd-to-replace-inotify-rsync/</id>
    <published>2017-06-18T12:43:21.000Z</published>
    <updated>2017-06-20T03:34:03.620Z</updated>
    
    <content type="html"><![CDATA[<font face="微软雅黑"><br><br>##################### phanx.com #####################<br> Author:   phanx<br> Updated:  2017-6-18<br>转载请保留作者信息<br>###################################################<br><br>两个主机有目录需要内容一样，NAS上的NFS没法用，直接export NFS也不太合适，上集群文件系统又有点过了，于是还是考虑用rsync来同步。<br>考虑到同步要求要“实时”，所以需要用inotify-tools来及时触发rsync的同步。<br><br>网上inotify + rsync的教程很多，但是确实都有些毛病。想用这个方案的同学请参考 <a href="http://www.cnblogs.com/ginvip/p/6430986.html" title="琴酒网络" target="_blank" rel="external">真正的inotify+rsync实时同步 彻底告别同步慢</a><br><br>后来又研究了一下，决定用lsyncd + rsync来实现。<br>网上已经有一篇写的比较好的教程了，可以参考 seanlook 写的 <a href="http://seanlook.com/2015/05/06/lsyncd-synchronize-realtime/" title="lsyncd实时同步搭建指南——取代rsync+inotify" target="_blank" rel="external">lsyncd实时同步搭建指南——取代rsync+inotify</a><br>SegmentFault上也有 <a href="https://segmentfault.com/a/1190000002737213" title="lsyncd实时同步搭建指南——取代rsync+inotify" target="_blank" rel="external">lsyncd实时同步搭建指南——取代rsync+inotify</a> 内容一样。<br><br>我因为要在内部YUM上分发，因此需要编译成RPM。 新版本（写这个的时候版本为2.2.2）的lsyncd没有提供RPM编译所需的SPEC文件，所幸<a href="https://fedoraproject.org/wiki/EPEL" target="_blank" rel="external">EPEL</a>上有<a href="https://download.fedoraproject.org/pub/epel/6/SRPMS/lsyncd-2.1.5-0.el6.src.rpm" target="_blank" rel="external">lsyncd-2.1.5</a>的版本SRC RPM，里面提供了SPEC文件，但是新版本的编译前配置方式从configure改成了cmake，因此要调整一下2.1.5所提供的SPEC文件。<br><br>先为编译lsyncd的做一些准备：<br><br><code>gcc</code> <code>gcc-c++</code> 这些不用说了，编译环境必须要的，没有的话，先搞好，要不然cmake会出错。<br><br>由于编译lsyncd依赖 <code>lua</code> / <code>lua-devel</code> 和 <code>asciidoc</code>，lua 在 RHEL/CentOS 的安装DVD中可以找到，但 lua-devel 和 asciidoc 这两个包不在 RHEL 的 base-channel 里面，而是在 rhel-6-server-optional-rpms 中，因此需要提前下载安装好。<br><br>有redhat账号的同学可以直接从 redhat CUSTOMER PORTAL —–&gt; DOWNLOADS —–&gt; <a href="https://access.redhat.com/downloads/content/package-browser" target="_blank" rel="external">Tech Preview: New RPM Package Search</a> 中找到并下载。<br><br>没有的就找 <a href="http://mirror.centos.org/centos/6/os/x86_64/Packages/" target="_blank" rel="external">CentOS的RPM</a> 来装:   <a href="http://mirror.centos.org/centos/6/os/x86_64/Packages/asciidoc-8.4.5-4.1.el6.noarch.rpm" target="_blank" rel="external">asciidoc-8.4.5-4.1.el6.noarch.rpm</a><br><a href="http://mirror.centos.org/centos/6/os/x86_64/Packages/lua-devel-5.1.4-4.1.el6.x86_64.rpm" target="_blank" rel="external">lua-devel-5.1.4-4.1.el6.x86_64.rpm</a><br>asciidoc 安装的时候会依赖 <code>docbook-style-xsl</code> 包，如果配了安装DVD的YUM源， 用yum装 asciidoc 的时候会自动安装解决依赖，没有配YUM就手工装，安装DVD中有。<br><br>另外，由于需要 <code>cmake</code>，所以也需要提前安装好(同样在安装DVD里面有）。<br><br>这些准备完后，从EPEL上下载 lsyncd-2.1.5-0.el6.src.rpm，从GITHUB上下载 lsyncd-master.zip 后，就可以开始构建新版RPM了。<br><br>先安装 lsyncd-2.1.5 的源码包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ivh lsyncd-2.1.5-0.el6.src.rpm</div></pre></td></tr></table></figure><br><br>然后在 rpmbuild的SPEC目录会有 lsyncd.spec<br><br>按照以下差异修改 lsyncd.spec 文件：<br><br><figure class="highlight diff"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line">Name:           lsyncd</div><div class="line"><span class="deletion">-Version:        2.1.5</span></div><div class="line"><span class="addition">+Version:        2.2.2</span></div><div class="line">Release:        0%&#123;?dist&#125;</div><div class="line">Summary:        File change monitoring and synchronization daemon</div><div class="line">Group:          Applications/Internet</div><div class="line">License:        GPLv2+</div><div class="line"><span class="deletion">-URL:            http://code.google.com/p/lsyncd/</span></div><div class="line"><span class="addition">+URL:            https://github.com/axkibe/lsyncd/</span></div><div class="line"><span class="deletion">-Source0:        http://lsyncd.googlecode.com/files/%&#123;name&#125;-%&#123;version&#125;.tar.gz</span></div><div class="line"><span class="addition">+Source0:        %&#123;name&#125;-%&#123;version&#125;.tar.gz</span></div><div class="line"></div><div class="line"><span class="deletion">-# https://github.com/axkibe/lsyncd/issues/220</span></div><div class="line"><span class="deletion">-Patch0:         0001-Sanitize-mv-arguments.patch</span></div><div class="line"></div><div class="line">Source1: %&#123;name&#125;.init</div><div class="line">Source3: %&#123;name&#125;.sysconfig</div><div class="line">Source4: %&#123;name&#125;.logrotate</div><div class="line">Source5: %&#123;name&#125;.conf</div><div class="line"></div><div class="line">BuildRoot:      %(mktemp -ud %&#123;_tmppath&#125;/%&#123;name&#125;-%&#123;version&#125;-%&#123;release&#125;-XXXXXX)</div><div class="line">BuildRequires:  lua-devel &gt;= 5.1.3</div><div class="line">BuildRequires:  asciidoc</div><div class="line">Requires: lua</div><div class="line">Requires: rsync, openssh-clients</div><div class="line"></div><div class="line">Requires(post): chkconfig</div><div class="line">Requires(preun): chkconfig</div><div class="line">Requires(preun): initscripts</div><div class="line">Requires(postun): initscripts</div><div class="line"></div><div class="line">%description</div><div class="line">Lsyncd watches a local directory trees event monitor interface (inotify). </div><div class="line">It aggregates and combines events for a few seconds and then spawns one </div><div class="line">(or more) process(es) to synchronize the changes. By default this is </div><div class="line">rsync.</div><div class="line"></div><div class="line">Lsyncd is thus a light-weight live mirror solution that is comparatively </div><div class="line">easy to install not requiring new file systems or block devices and does</div><div class="line">not hamper local file system performance.</div><div class="line"></div><div class="line">%prep</div><div class="line">%setup -q</div><div class="line"><span class="deletion">-%patch0 -p1</span></div><div class="line"></div><div class="line">%build</div><div class="line"><span class="deletion">-export CFLAGS="$RPM_OPT_FLAGS -fPIE"</span></div><div class="line"><span class="deletion">-export LDFLAGS="-pie -Wl,-z,relro -Wl,-z,now"</span></div><div class="line"><span class="deletion">-%configure</span></div><div class="line"><span class="deletion">-make %&#123;?_smp_mflags&#125;</span></div><div class="line"><span class="addition">+cd build</span></div><div class="line"><span class="addition">+cmake ..</span></div><div class="line"><span class="addition">+make</span></div><div class="line"></div><div class="line">%install</div><div class="line">rm -rf $RPM_BUILD_ROOT</div><div class="line"><span class="deletion">-make install DESTDIR=$RPM_BUILD_ROOT</span></div><div class="line"><span class="addition">+mkdir -p $RPM_BUILD_ROOT/usr/bin</span></div><div class="line"><span class="addition">+install -c build/lsyncd $RPM_BUILD_ROOT/usr/bin</span></div><div class="line"><span class="addition">+mkdir -p $RPM_BUILD_ROOT/usr/share/doc/lsyncd/</span></div><div class="line"><span class="addition">+install -c -m 644 examples/lbash.lua examples/lecho.lua examples/lgforce.lua examples/limagemagic.lua examples/lpostcmd.lua examples/lrsync.lua examples/lrsyncssh.lua $RPM_BUILD_ROOT/usr/share/doc/lsyncd/</span></div><div class="line"><span class="addition">+mkdir -p $RPM_BUILD_ROOT/usr/share/man/man1/</span></div><div class="line"><span class="addition">+install -c -m 644 doc/manpage/lsyncd.1 $RPM_BUILD_ROOT/usr/share/man/man1/</span></div><div class="line">install -d 0755 %&#123;buildroot&#125;%&#123;_initrddir&#125; </div><div class="line">install -p -m 0755 %&#123;SOURCE1&#125; %&#123;buildroot&#125;%&#123;_initrddir&#125;/lsyncd</div><div class="line">install -p -D -m 0644 %&#123;SOURCE3&#125; %&#123;buildroot&#125;%&#123;_sysconfdir&#125;/sysconfig/%&#123;name&#125;</div><div class="line">install -d -m 0755 %&#123;buildroot&#125;%&#123;_localstatedir&#125;/run/%&#123;name&#125;</div><div class="line">install -d -m 0755 %&#123;buildroot&#125;%&#123;_localstatedir&#125;/log/%&#123;name&#125;</div><div class="line">install -p -D -m 0644 %&#123;SOURCE4&#125; %&#123;buildroot&#125;%&#123;_sysconfdir&#125;/logrotate.d/%&#123;name&#125;</div><div class="line">install -p -D -m 0644 %&#123;SOURCE5&#125; %&#123;buildroot&#125;%&#123;_sysconfdir&#125;/</div><div class="line"></div><div class="line">%clean</div><div class="line">rm -rf $RPM_BUILD_ROOT</div><div class="line"></div><div class="line">%files</div><div class="line">%defattr(-,root,root,-)</div><div class="line">%&#123;_mandir&#125;/man1/lsyncd.1*</div><div class="line">%doc COPYING ChangeLog examples</div><div class="line">%config(noreplace) %&#123;_sysconfdir&#125;/%&#123;name&#125;.conf</div><div class="line">%config(noreplace) %&#123;_sysconfdir&#125;/sysconfig/%&#123;name&#125;</div><div class="line">%attr(0755,root,root) %&#123;_initrddir&#125;/%&#123;name&#125;</div><div class="line">%dir %&#123;_localstatedir&#125;/run/%&#123;name&#125;</div><div class="line">%dir %&#123;_localstatedir&#125;/log/%&#123;name&#125;</div><div class="line">%config(noreplace) %&#123;_sysconfdir&#125;/logrotate.d/%&#123;name&#125;</div><div class="line">%&#123;_bindir&#125;/lsyncd</div><div class="line">%exclude %&#123;_docdir&#125;/lsyncd</div><div class="line"></div><div class="line">%post</div><div class="line">/sbin/chkconfig --add %&#123;name&#125;</div><div class="line"></div><div class="line">%preun</div><div class="line">if [ "$1" -eq 0 ]; then</div><div class="line">        /sbin/service %&#123;name&#125; stop &gt;/dev/null 2&gt;&amp;1</div><div class="line">        /sbin/chkconfig --del %&#123;name&#125;</div><div class="line">fi</div><div class="line"></div><div class="line">%postun</div><div class="line">if [ "$1" -ge "1" ]; then</div><div class="line">  /sbin/service %&#123;name&#125; condrestart &gt;/dev/null 2&gt;&amp;1 || :</div><div class="line">fi</div><div class="line"></div><div class="line">%changelog</div><div class="line"><span class="addition">+* Sun Jun  18 2017 Phanx Lee &lt;phanx#sina.com&gt; - 2.2.2-0</span></div><div class="line"><span class="addition">+- Update to 2.2.2.</span></div></pre></td></tr></table></figure><br><br>再把 lsyncd-master.zip 放到rpmbuild的SOURCES目录，解压 修改目录名，创建build空目录，再打包。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">unzip lsyncd-master.zip</div><div class="line">mkdir lsyncd-master/build</div><div class="line">mv lsyncd-master lsyncd-2.2.2</div><div class="line">tar czf lsyncd-2.2.1.tar.gz lsyncd-2.2.2</div><div class="line"><span class="built_in">cd</span> ../SPEC</div><div class="line">rpmbuild -bb lsyncd.spec</div></pre></td></tr></table></figure><br><br>完成后会生成两个RPM，一般只需要 lsyncd-2.2.2-0.el6.x86_64.rpm 这个就好了。<br><br>如果有内部的RPM包签名，那么加上签名就可以发布到内部YUM源去了。<br><br><code>rpm --addsign lsyncd-2.2.2-0.el6.x86_64.rpm</code><br><br>现在就可以开始安装配置 lsyncd 了。<br></font>]]></content>
    
    <summary type="html">
    
      &lt;font face=&quot;微软雅黑&quot;&gt;&lt;br&gt;&lt;br&gt;##################### phanx.com #####################&lt;br&gt; Author:   phanx&lt;br&gt; Updated:  2017-6-18&lt;br&gt;转载请保留作者信息&lt;br&gt;
    
    </summary>
    
    
      <category term="lsyncd inotify rsync" scheme="http://www.phanx.com/tags/lsyncd-inotify-rsync/"/>
    
  </entry>
  
  <entry>
    <title>Phanx Blog</title>
    <link href="http://www.phanx.com/2017/05/17/home-page/"/>
    <id>http://www.phanx.com/2017/05/17/home-page/</id>
    <published>2017-05-17T13:51:44.088Z</published>
    <updated>2017-06-18T16:00:44.376Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正在进行Blog搬家，这里看到的Blog暂时不完整。"><a href="#正在进行Blog搬家，这里看到的Blog暂时不完整。" class="headerlink" title="正在进行Blog搬家，这里看到的Blog暂时不完整。"></a>正在进行Blog搬家，这里看到的Blog暂时不完整。</h2><p>由于Chinaunix的Blog主机不支持301跳转，所以只有麻烦大家访问的时候多点一下。</p>
<p>phanx 的博客空间，请访问这个地址 <a href="http://blog.chinaunix.net/uid/7549563.html" target="_blank" rel="external">http://phanx.blog.chinaunix.net</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;正在进行Blog搬家，这里看到的Blog暂时不完整。&quot;&gt;&lt;a href=&quot;#正在进行Blog搬家，这里看到的Blog暂时不完整。&quot; class=&quot;headerlink&quot; title=&quot;正在进行Blog搬家，这里看到的Blog暂时不完整。&quot;&gt;&lt;/a&gt;正在进行Blog
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在Openfiler中使用Device Mapper Multipath</title>
    <link href="http://www.phanx.com/2011/05/08/use-device-mapper-multipath-on-openfiler/"/>
    <id>http://www.phanx.com/2011/05/08/use-device-mapper-multipath-on-openfiler/</id>
    <published>2011-05-08T12:48:44.000Z</published>
    <updated>2017-06-18T14:36:27.038Z</updated>
    
    <content type="html"><![CDATA[<font face="微软雅黑"><br><br>##################### phanx.com #####################<br> Author:   phanx<br> Updated:  2011-5-8<br>转载请保留作者信息<br>###################################################<br><br><br>在使用Openfiler连接EMC存储的时候，由于Openfiler是基于rPath Linux版本的，EMC的PowerPath没有对rPath提供支持，所以无法使用。<br>但是，在linux发行版中，一般都自带了Device Mapper Multipath，可以采用dm-mutipath来替代PowerPath提供的多路径功能。<br><br>首先建立一个/etc/multipath.conf文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">defaults &#123;</div><div class="line">    user_friendly_names yes</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>然后启动multpathd服务，加载dm_multipath模块，这样就可以看到多路径聚合后的psudo device了。<br><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># chkconfig --level 345 multipathd on</span></div><div class="line">[root@localhost ~]<span class="comment"># service multipathd start</span></div><div class="line">[root@localhost ~]<span class="comment"># modprobe dm_multipath</span></div><div class="line">[root@localhost ~]<span class="comment"># service multipathd restart</span></div><div class="line">[root@localhost ~]<span class="comment"># lsmod | grep multi</span></div><div class="line">dm_multipath           17476  3 dm_round_robin</div><div class="line">dm_mod                 76610  16 dm_multipath,dm_mirror,dm_log</div><div class="line">[root@localhost ~]<span class="comment"># multipath</span></div><div class="line"></div><div class="line">[root@localhost ~]<span class="comment"># ll /dev/mapper/</span></div><div class="line">total 0</div><div class="line">crw-rw---- 1 root </div><div class="line">root  10, 57 2011-05-07 00:46 control</div><div class="line">brw-rw---- 1 root disk 253,  0 2011-05-07 00:46 mpathb</div><div class="line">brw-rw---- 1 root disk 253,  1 2011-05-07 00:46 mpathc</div><div class="line"></div><div class="line">[root@localhost ~]<span class="comment"># multipath -ll</span></div><div class="line">mpathc (360060160ef501d003eed32b4c26be011) dm-1 DGC,RAID 10</div><div class="line">size=180G features=<span class="string">'1 queue_if_no_path'</span> hwhandler=<span class="string">'1 emc'</span> wp=rw</div><div class="line">|-+- policy=<span class="string">'round-robin 0'</span> prio=1 status=active</div><div class="line">| |- 3:0:0:0 sdb 8:16  active ready running</div><div class="line">| `- 4:0:0:0 sdf 8:80  active ready running</div><div class="line">`-+- policy=<span class="string">'round-robin 0'</span> prio=0 status=enabled</div><div class="line">  |- 3:0:1:0 sdd 8:48  active ready running</div><div class="line">  `- 4:0:1:0 sdh 8:112 active ready running</div><div class="line">mpathb (360060160ef501d00a6ececc4c26be011) dm-0 DGC,RAID 10</div><div class="line">size=120G features=<span class="string">'1 queue_if_no_path'</span> hwhandler=<span class="string">'1 emc'</span> wp=rw</div><div class="line">|-+- policy=<span class="string">'round-robin 0'</span> prio=1 status=active</div><div class="line">| |- 3:0:0:1 sdc 8:32  active ready running</div><div class="line">| `- 4:0:0:1 sdg 8:96  active ready running</div><div class="line">`-+- policy=<span class="string">'round-robin 0'</span> prio=0 status=enabled</div><div class="line">  |- 3:0:1:1 sde 8:64  active ready running</div><div class="line">  `- 4:0:1:1 sdi 8:128 active ready running</div></pre></td></tr></table></figure><br><br>由于Openfiler的/opt/openfiler/sbin/list-disks.pl脚本不能识别Device Mapper的设备，所以无法直接在Web界面中通过Block Device创建PV和VG。但是可以通过在CLI下手工的创建。<br>使用fdisk对LUN划分区,直接创建一个主分区，类型为 8e 的Linux LVM。<br>完成后即可看到mpathbp1和mpathcp1两个设备了，再把这两个设备定义为PV，然后创建VG就可以<br>在Openfiler中使用了。<br><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># fdisk /dev/mapper/mpathb</span></div><div class="line">	</div><div class="line">[root@localhost ~]<span class="comment"># fdisk /dev/mapper/mpathc</span></div><div class="line">	</div><div class="line">[root@localhost ~]<span class="comment"># pvcreate /dev/mapper/mpathbp1</span></div><div class="line">[root@localhost ~]<span class="comment"># pvcreate /dev/mapper/mpathcp1</span></div><div class="line">	</div><div class="line">[root@localhost ~]<span class="comment"># vgcreate nasdatavg /dev/mapper/mpathbp1</span></div><div class="line">[root@localhost ~]<span class="comment"># vgcreate naslogvg /dev/mapper/mpathcp1</span></div></pre></td></tr></table></figure><br><br></font>]]></content>
    
    <summary type="html">
    
      &lt;font face=&quot;微软雅黑&quot;&gt;&lt;br&gt;&lt;br&gt;##################### phanx.com #####################&lt;br&gt; Author:   phanx&lt;br&gt; Updated:  2011-5-8&lt;br&gt;转载请保留作者信息&lt;br&gt;#
    
    </summary>
    
    
      <category term="openfiler device-mapper multipath" scheme="http://www.phanx.com/tags/openfiler-device-mapper-multipath/"/>
    
  </entry>
  
</feed>
